3.1.15 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:
@linei:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@options{ :@has_childrenT:@children[o:Sass::Tree::ImportNode
;i;0:@imported_filename"shared;@;
[ o:Sass::Tree::CommentNode;i;@:
@loud0:@silenti ;
[ :@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */o:Sass::Tree::VariableNode;i:
@expro:Sass::Script::String	;i;@:
@type:identifier;"all;@:@guarded"!default;
[ :
@name" default-transition-propertyo;;i;o:Sass::Script::Number;i:@denominator_units[ ;@:@numerator_units["s:@original"1s;i;@;"!default;
[ ;" default-transition-durationo;;i;o:Sass::Script::Bool;i;@;F;@;"!default;
[ ;" default-transition-functiono;;i;o;;i;@;F;@;"!default;
[ ;"default-transition-delayo;;i;o:Sass::Script::List	;i;@:@separator:
comma;[o;	;i;@;;;"transformo;	;i;@;;;"transform-origin;@;"!default;
[ ;"#transitionable-prefixed-valueso;;i!;@;0;i ;
[ ;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */o:Sass::Tree::MixinDefNode;i0;@;	T:
@args[[o:Sass::Script::Variable;@:@underscored_name"property_1;"property-1o;"	;i&;@;#" default_transition_property;" default-transition-property[o;";@;#"property_2;"property-2o;;i';@;F[o;";@;#"property_3;"property-3o;;i(;@;F[o;";@;#"property_4;"property-4o;;i);@;F[o;";@;#"property_5;"property-5o;;i*;@;F[o;";@;#"property_6;"property-6o;;i+;@;F[o;";@;#"property_7;"property-7o;;i,;@;F[o;";@;#"property_8;"property-8o;;i-;@;F[o;";@;#"property_9;"property-9o;;i.;@;F[o;";@;#"property_10;"property-10o;;i/;@;F;
[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:
@linei1:@options{ :@operand2o:Sass::Script::String	;i1;@:
@type:identifier:@value"string:@operator:eq:@operand1o:Sass::Script::Funcall
;i1:@keywords{ ;@:
@args[o:Sass::Script::Variable	;i1;@:@underscored_name"property_1:
@name"property-1;"type-of0[o:Sass::Tree::VariableNode;i1:
@expro;
;i1;{ ;@;[o;	;i1;@;"property_1;"property-1;"unquote;@:@guarded0:@children[ ;"property-1o;;i2;o:Sass::Script::Funcall
;i2:@keywords{ ;@;![o;"	;i2;@;#"property_1;"property-1o;"	;i2;@;#"property_2;"property-2o;"	;i2;@;#"property_3;"property-3o;"	;i2;@;#"property_4;"property-4o;"	;i2;@;#"property_5;"property-5o;"	;i2;@;#"property_6;"property-6o;"	;i2;@;#"property_7;"property-7o;"	;i2;@;#"property_8;"property-8o;"	;i2;@;#"property_9;"property-9o;"	;i2;@;#"property_10;"property-10;"compact;@;0;
[ ;"propertiesu;$¼[o:Sass::Script::Variable	:
@linei3:@options{ :@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode;i3:
@tabsi :@prop_syntax:new;@:@children[ :@valueo:Sass::Script::Funcall
;i3:@keywords{ ;@:
@args[o:Sass::Script::String	;i3;@:
@type:identifier;"-webkito; 	;i3;@;"properties;	"properties;	"prefixed-for-transition;	[" -webkit-transition-propertyu;$¸[o:Sass::Script::Variable	:
@linei4:@options{ :@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode;i4:
@tabsi :@prop_syntax:new;@:@children[ :@valueo:Sass::Script::Funcall
;i4:@keywords{ ;@:
@args[o:Sass::Script::String	;i4;@:
@type:identifier;"	-mozo; 	;i4;@;"properties;	"properties;	"prefixed-for-transition;	["-moz-transition-propertyu;$°[o:Sass::Script::Variable	:
@linei5:@options{ :@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode;i5:
@tabsi :@prop_syntax:new;@:@children[ :@valueo:Sass::Script::Funcall
;i5:@keywords{ ;@:
@args[o:Sass::Script::String	;i5;@:
@type:identifier;"-oo; 	;i5;@;"properties;	"properties;	"prefixed-for-transition;	["-o-transition-propertyo:Sass::Tree::PropNode;i6:
@tabsi :@prop_syntax:new;@;
[ ;o;"	;i6;@;#"properties;"properties;["transition-property;"transition-propertyo;;i9;@;0;i ;
[ ;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */o; ;iH;@;	T;![[o;";@;#"duration_1;"duration-1o;"	;i>;@;#" default_transition_duration;" default-transition-duration[o;";@;#"duration_2;"duration-2o;;i?;@;F[o;";@;#"duration_3;"duration-3o;;i@;@;F[o;";@;#"duration_4;"duration-4o;;iA;@;F[o;";@;#"duration_5;"duration-5o;;iB;@;F[o;";@;#"duration_6;"duration-6o;;iC;@;F[o;";@;#"duration_7;"duration-7o;;iD;@;F[o;";@;#"duration_8;"duration-8o;;iE;@;F[o;";@;#"duration_9;"duration-9o;;iF;@;F[o;";@;#"duration_10;"duration-10o;;iG;@;F;
[u;$Í[o:Sass::Script::Operation
:
@lineiI:@options{ :@operand2o:Sass::Script::String	;iI;@:
@type:identifier:@value"string:@operator:eq:@operand1o:Sass::Script::Funcall
;iI:@keywords{ ;@:
@args[o:Sass::Script::Variable	;iI;@:@underscored_name"duration_1:
@name"duration-1;"type-of0[o:Sass::Tree::VariableNode;iI:
@expro;
;iI;{ ;@;[o;	;iI;@;"duration_1;"duration-1;"unquote;@:@guarded0:@children[ ;"duration-1o;;iJ;o;%
;iJ;&{ ;@;![o;"	;iJ;@;#"duration_1;"duration-1o;"	;iJ;@;#"duration_2;"duration-2o;"	;iJ;@;#"duration_3;"duration-3o;"	;iJ;@;#"duration_4;"duration-4o;"	;iJ;@;#"duration_5;"duration-5o;"	;iJ;@;#"duration_6;"duration-6o;"	;iJ;@;#"duration_7;"duration-7o;"	;iJ;@;#"duration_8;"duration-8o;"	;iJ;@;#"duration_9;"duration-9o;"	;iJ;@;#"duration_10;"duration-10;"compact;@;0;
[ ;"durationso:Sass::Tree::MixinNode;iM;&{ ;@;![o;	;iK;@;;;"transition-durationo;"	;iK;@;#"durations;"durationso;	;iL;@;;;"	-mozo;	;iL;@;;;"-webkito;	;iL;@;;;"-oo:!Sass::Script::UnaryOperation	;iL:@operando;	;iL;@;;;"-ms;@:@operator:noto;,	;iL;-o;	;iL;@;;;"-khtml;@;.;/o;	;iL;@;;;"official;
[ ;"experimental;"transition-durationo;;iP;@;0;i ;
[ ;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */o; ;i`;@;	T;![[o;";@;#"function_1;"function-1o;"	;iV;@;#" default_transition_function;" default-transition-function[o;";@;#"function_2;"function-2o;;iW;@;F[o;";@;#"function_3;"function-3o;;iX;@;F[o;";@;#"function_4;"function-4o;;iY;@;F[o;";@;#"function_5;"function-5o;;iZ;@;F[o;";@;#"function_6;"function-6o;;i[;@;F[o;";@;#"function_7;"function-7o;;i\;@;F[o;";@;#"function_8;"function-8o;;i];@;F[o;";@;#"function_9;"function-9o;;i^;@;F[o;";@;#"function_10;"function-10o;;i_;@;F;
[o;;ia;o;%
;ia;&{ ;@;![o;"	;ia;@;#"function_1;"function-1;"unquote;@;0;
[ ;"function-1o;;ib;o;%
;ib;&{ ;@;![o;"	;ib;@;#"function_1;"function-1o;"	;ib;@;#"function_2;"function-2o;"	;ib;@;#"function_3;"function-3o;"	;ib;@;#"function_4;"function-4o;"	;ib;@;#"function_5;"function-5o;"	;ib;@;#"function_6;"function-6o;"	;ib;@;#"function_7;"function-7o;"	;ib;@;#"function_8;"function-8o;"	;ib;@;#"function_9;"function-9o;"	;ib;@;#"function_10;"function-10;"compact;@;0;
[ ;"functionso;+;ie;&{ ;@;![o;	;ic;@;;;"transition-timing-functiono;"	;ic;@;#"functions;"functionso;	;id;@;;;"	-mozo;	;id;@;;;"-webkito;	;id;@;;;"-oo;,	;id;-o;	;id;@;;;"-ms;@;.;/o;,	;id;-o;	;id;@;;;"-khtml;@;.;/o;	;id;@;;;"official;
[ ;"experimental;"transition-timing-functiono;;ih;@;0;i ;
[ ;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */o; ;iw;@;	T;![[o;";@;#"delay_1;"delay-1o;"	;im;@;#"default_transition_delay;"default-transition-delay[o;";@;#"delay_2;"delay-2o;;in;@;F[o;";@;#"delay_3;"delay-3o;;io;@;F[o;";@;#"delay_4;"delay-4o;;ip;@;F[o;";@;#"delay_5;"delay-5o;;iq;@;F[o;";@;#"delay_6;"delay-6o;;ir;@;F[o;";@;#"delay_7;"delay-7o;;is;@;F[o;";@;#"delay_8;"delay-8o;;it;@;F[o;";@;#"delay_9;"delay-9o;;iu;@;F[o;";@;#"delay_10;"delay-10o;;iv;@;F;
[u;$¾[o:Sass::Script::Operation
:
@lineix:@options{ :@operand2o:Sass::Script::String	;ix;@:
@type:identifier:@value"string:@operator:eq:@operand1o:Sass::Script::Funcall
;ix:@keywords{ ;@:
@args[o:Sass::Script::Variable	;ix;@:@underscored_name"delay_1:
@name"delay-1;"type-of0[o:Sass::Tree::VariableNode;ix:
@expro;
;ix;{ ;@;[o;	;ix;@;"delay_1;"delay-1;"unquote;@:@guarded0:@children[ ;"delay-1o;;iy;o;%
;iy;&{ ;@;![o;"	;iy;@;#"delay_1;"delay-1o;"	;iy;@;#"delay_2;"delay-2o;"	;iy;@;#"delay_3;"delay-3o;"	;iy;@;#"delay_4;"delay-4o;"	;iy;@;#"delay_5;"delay-5o;"	;iy;@;#"delay_6;"delay-6o;"	;iy;@;#"delay_7;"delay-7o;"	;iy;@;#"delay_8;"delay-8o;"	;iy;@;#"delay_9;"delay-9o;"	;iy;@;#"delay_10;"delay-10;"compact;@;0;
[ ;"delayso;+;i|;&{ ;@;![o;	;iz;@;;;"transition-delayo;"	;iz;@;#"delays;"delayso;	;i{;@;;;"	-mozo;	;i{;@;;;"-webkito;	;i{;@;;;"-oo;,	;i{;-o;	;i{;@;;;"-ms;@;.;/o;,	;i{;-o;	;i{;@;;;"-khtml;@;.;/o;	;i{;@;;;"official;
[ ;"experimental;"transition-delayo;;i;@;0;i ;
[ ;["*/* Transition all-in-one shorthand */o; ;i;@;	T;![	[o;";@;#"property;"propertyo;"	;i};@;#" default_transition_property;" default-transition-property[o;";@;#"duration;"durationo;"	;i~;@;#" default_transition_duration;" default-transition-duration[o;";@;#"function;"functiono;"	;i;@;#" default_transition_function;" default-transition-function[o;";@;#"
delay;"
delayo;"	;i;@;#"default_transition_delay;"default-transition-delay;
[o;+;i;&{ ;@;![o;%
;i;&{ ;@;![o;	;i;@;:
space;[	o;"	;i;@;#"property;"propertyo;"	;i;@;#"duration;"durationo;"	;i;@;#"function;"functiono;"	;i;@;#"
delay;"
delay;"compact;
[ ;"transition;"single-transitiono; ;i;@;	T;![[o;";@;#"transition_1;"transition-1o;	;i;@;;;"default[o;";@;#"transition_2;"transition-2o;;i;@;F[o;";@;#"transition_3;"transition-3o;;i;@;F[o;";@;#"transition_4;"transition-4o;;i;@;F[o;";@;#"transition_5;"transition-5o;;i;@;F[o;";@;#"transition_6;"transition-6o;;i;@;F[o;";@;#"transition_7;"transition-7o;;i;@;F[o;";@;#"transition_8;"transition-8o;;i;@;F[o;";@;#"transition_9;"transition-9o;;i;@;F[o;";@;#"transition_10;"transition-10o;;i;@;F;
[u;$î[o:Sass::Script::Operation
:
@linei:@options{ :@operand2o:Sass::Script::String	;i;@:
@type:identifier:@value"default:@operator:eq:@operand1o:Sass::Script::Variable	;i;@:@underscored_name"transition_1:
@name"transition-10[o:Sass::Tree::VariableNode;i:
@expro:Sass::Script::Funcall
;i:@keywords{ ;@:
@args[o:Sass::Script::List	;i;@:@separator:
space;[	o;	;i;@;" default_transition_property;" default-transition-propertyo;	;i;@;" default_transition_duration;" default-transition-durationo;	;i;@;" default_transition_function;" default-transition-functiono;	;i;@;"default_transition_delay;"default-transition-delay;"compact;@:@guarded0:@children[ ;"transition-1o;;i;o;;i;@;F;@;0;
[ ;"transitionsu;$g[o:Sass::Script::Operation
:
@linei:@options{ :@operand2o; 
;i;@;o:Sass::Script::String	;i;@:
@type:identifier:@value"	list:@operator:eq:@operand1o:Sass::Script::Funcall
;i:@keywords{ ;@:
@args[o;
;i;{ ;@;[o:Sass::Script::Variable	;i;@:@underscored_name"transition_1:
@name"transition-1o:Sass::Script::Number;i:@denominator_units[ ;@:@numerator_units[ :@original"1;i;"nth;"type-of;:and;o; 
;i;@;o;		;i;@;
;;"	list;;;o;
;i;{ ;@;[o;	;i;@;"transition_1;"transition-1;"type-ofu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@linei:
@expro:Sass::Script::Funcall
;i:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;i;
@
:@underscored_name"transition_1:
@name"transition-1o;	;i;
@
;"transition_2;"transition-2o;	;i;
@
;"transition_3;"transition-3o;	;i;
@
;"transition_4;"transition-4o;	;i;
@
;"transition_5;"transition-5o;	;i;
@
;"transition_6;"transition-6o;	;i;
@
;"transition_7;"transition-7o;	;i;
@
;"transition_8;"transition-8o;	;i;
@
;"transition_9;"transition-9o;	;i;
@
;"transition_10;"transition-10;"compact;
@
:@guarded0:@children[ ;"transitions[o:Sass::Tree::VariableNode;i:
@expro;
;i;{ ;@;[o;	;i;@;"transition_1;"transition-1o;
;i;{ ;@;[o;	;i;@;"transition_2;"transition-2o;	;i;@;"transition_3;"transition-3o;	;i;@;"transition_4;"transition-4o;	;i;@;"transition_5;"transition-5o;	;i;@;"transition_6;"transition-6o;	;i;@;"transition_7;"transition-7o;	;i;@;"transition_8;"transition-8o;	;i;@;"transition_9;"transition-9o;	;i;@;"transition_10;"transition-10;"compacto;		;i;@;
;;"
comma;"	join;@:@guarded0:@children[ ;"transitionso;;i;o;%
;i;&{ ;@;![ ;"comma-list;@;0;
[ ;"delayso;;i;o;;i;@;F;@;0;
[ ;"has-delayso;;i;o;%
;i;&{ ;@;![ ;"comma-list;@;0;
[ ;"webkit-valueo;;i;o;%
;i;&{ ;@;![ ;"comma-list;@;0;
[ ;"moz-valueo;;i;o;%
;i;&{ ;@;![ ;"comma-list;@;0;
[ ;"o-valueo;;i ;@;0;i ;
[ ;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */o:Sass::Tree::EachNode;i¢;@;	T:	@var"transition:
@listo;"	;i¢;@;#"transitions;"transitions;
[o;;i£;@;0;i ;
[ ;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */o;;i¥;o;%
;i¥;&{ ;@;![o;"	;i¥;@;#"transition;"transitiono;;i¥;[ ;@;[ ;"1;i;"nth;@;0;
[ ;"propertyo;;i¦;o;;i¦;@;F;@;0;
[ ;"durationo;;i§;o;;i§;@;F;@;0;
[ ;"timing-functiono;;i¨;o;;i¨;@;F;@;0;
[ ;"
delayu;$
[o:Sass::Script::Operation
:
@linei©:@options{ :@operand2o:Sass::Script::Number;i©:@denominator_units[ ;@:@numerator_units[ :@original"1:@valuei:@operator:gt:@operand1o:Sass::Script::Funcall
;i©:@keywords{ ;@:
@args[o:Sass::Script::Variable	;i©;@:@underscored_name"transition:
@name"transition;"length0[o:Sass::Tree::VariableNode;i©:
@expro;
;i©;{ ;@;[o;	;i©;@;"transition;"transitiono;	;i©;
@	;@;[ ;"2;i;"nth;@:@guarded0:@children[ ;"durationu;$[o:Sass::Script::Operation
:
@lineiª:@options{ :@operand2o:Sass::Script::Number;iª:@denominator_units[ ;@:@numerator_units[ :@original"2:@valuei:@operator:gt:@operand1o:Sass::Script::Funcall
;iª:@keywords{ ;@:
@args[o:Sass::Script::Variable	;iª;@:@underscored_name"transition:
@name"transition;"length0[o:Sass::Tree::VariableNode;iª:
@expro;
;iª;{ ;@;[o;	;iª;@;"transition;"transitiono;	;iª;
@	;@;[ ;"3;i;"nth;@:@guarded0:@children[ ;"timing-functionu;$M[o:Sass::Script::Operation
:
@linei«:@options{ :@operand2o:Sass::Script::Number;i«:@denominator_units[ ;@:@numerator_units[ :@original"3:@valuei:@operator:gt:@operand1o:Sass::Script::Funcall
;i«:@keywords{ ;@:
@args[o:Sass::Script::Variable	;i«;@:@underscored_name"transition:
@name"transition;"length0[o:Sass::Tree::VariableNode;i«:
@expro;
;i«;{ ;@;[o;	;i«;@;"transition;"transitiono;	;i«;
@	;@;[ ;"4;i	;"nth;@:@guarded0:@children[ ;"
delayo;;i«;o:Sass::Script::Bool;i«;@;T;@;0;[ ;"has-delayso;;i­;@;0;i ;
[ ;[";/* If a delay is provided without a timing function */u;$^[o:Sass::Script::Operation
:
@linei®:@options{ :@operand2o:!Sass::Script::UnaryOperation	;i®:@operando:Sass::Script::Variable	;i®;@:@underscored_name"
delay:
@name"
delay;@:@operator:not;:and:@operand1o:Sass::Script::Funcall
;i®:@keywords{ ;@:
@args[o;	;i®;@;"timing_function;"timing-function;"is-time0[o:Sass::Tree::VariableNode;i®:
@expro;	;i®;@;"timing_function;"timing-function;@:@guarded0:@children[ ;"
delayo;;i®;o:Sass::Script::Bool;i®;@:@valueF;@;0;[ ;"timing-functiono;;i®;o;;i®;@;T;@;0;[ ;"has-delayso;;i°;@;0;i ;
[ ;["9/* Keep a list of delays in case one is specified */o;;i±;o;%
;i±;&{ ;@;![o;"	;i±;@;#"delays;"delayso;%
;i±;&{ ;@;![o;"	;i±;@;#"
delay;"
delayo;"	;i±;@;#"
delay;"
delayo;;i±;[ ;@;["s;"0s;i ;"if;"append;@;0;
[ ;"delayso;;i³;o;%
;i³;&{ ;@;![o;"	;i³;@;#"webkit_value;"webkit-valueo;%
;i³;&{ ;@;![o;	;i³;@;;0;[o;%
;i³;&{ ;@;![o;	;i³;@;;;"-webkito;"	;i³;@;#"property;"property;"prefixed-for-transitiono;"	;i³;@;#"duration;"durationo;"	;i³;@;#"timing_function;"timing-function;"compact;"append;@;0;
[ ;"webkit-valueo;;i´;o;%
;i´;&{ ;@;![o;"	;i´;@;#"moz_value;"moz-valueo;%
;i´;&{ ;@;![o;	;i´;@;;0;[	o;%
;i´;&{ ;@;![o;	;i´;@;;;"	-mozo;"	;i´;@;#"property;"property;"prefixed-for-transitiono;"	;i´;@;#"duration;"durationo;"	;i´;@;#"timing_function;"timing-functiono;"	;i´;@;#"
delay;"
delay;"compact;"append;@;0;
[ ;"moz-valueo;;iµ;o;%
;iµ;&{ ;@;![o;"	;iµ;@;#"o_value;"o-valueo;%
;iµ;&{ ;@;![o;	;iµ;@;;0;[	o;%
;iµ;&{ ;@;![o;	;iµ;@;;;"-oo;"	;iµ;@;#"property;"property;"prefixed-for-transitiono;"	;iµ;@;#"duration;"durationo;"	;iµ;@;#"timing_function;"timing-functiono;"	;iµ;@;#"
delay;"
delay;"compact;"append;@;0;
[ ;"o-valueu;$á[o:Sass::Script::Variable	:
@linei¸:@options{ :@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit0[o:Sass::Tree::PropNode;i¸:
@tabsi :@prop_syntax:new;@:@children[ :@valueo; 	;i¸;@;"webkit_value;	"webkit-value;	["-webkit-transitiono:Sass::Tree::CommentNode;i¹;@:
@loud0:@silenti ;[ ;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:
@lineiº:@options{ :@underscored_name"has_delays:
@name"has-delays0[o:Sass::Tree::PropNode;iº:
@tabsi :@prop_syntax:new;@:@children[ :@valueo; 	;iº;@;"delays;	"delays;	["-webkit-transition-delayu;$#[o:Sass::Script::Variable	:
@linei»:@options{ :@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla0[o:Sass::Tree::PropNode;i»:
@tabsi :@prop_syntax:new;@:@children[ :@valueo; 	;i»;@;"moz_value;	"moz-value;	["-moz-transitionu;$[o:Sass::Script::Variable	:
@linei¼:@options{ :@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera0[o:Sass::Tree::PropNode;i¼:
@tabsi :@prop_syntax:new;@:@children[ :@valueo; 	;i¼;@;"o_value;	"o-value;	["-o-transitiono;';i½;(i ;);*;@;
[ ;o;"	;i½;@;#"transitions;"transitions;["transition;"transitiono;;iÀ;@;0;i ;
[ ;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */o:Sass::Tree::FunctionNode;iÁ;@;	T;![[o;";@;#"	list;"	listo;	;iÁ;@;;0;[ ;
[o:Sass::Tree::ReturnNode	;iÂ;o;%
;iÂ;&{ ;@;![o;	;iÂ;@;;0;[ o;"	;iÂ;@;#"	list;"	listo;	;iÂ;@;;;"
comma;"	join;@;
[ ;"comma-listo;;iÅ;@;0;i ;
[ ;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */o;4;iÆ;@;	T;![[o;";@;#"prefix;"prefix0[o;";@;#"property;"property0;
[u;$[o:Sass::Script::Operation
:
@lineiÇ:@options{ :@operand2o:Sass::Script::String	;iÇ;@:
@type:identifier:@value"	list:@operator:eq:@operand1o:Sass::Script::Funcall
;iÇ:@keywords{ ;@:
@args[o:Sass::Script::Variable	;iÇ;@:@underscored_name"property:
@name"property;"type-ofu:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@lineiÎ:@keywords{ :@options{ :
@args[o:Sass::Script::Variable	;iÎ;@:@underscored_name"#transitionable_prefixed_values:
@name"#transitionable-prefixed-valueso;
	;iÎ;@;"property;"property;"
indexu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@lineiÑ:
@expro:Sass::Script::Variable	;iÑ:@options{ :@underscored_name"property:
@name"property;	@	:@children[ [o:Sass::Tree::ReturnNode	;iÏ:
@expro: Sass::Script::Interpolation;iÏ:@aftero;;iÏ;0:@originally_textF;@:	@mido;
	;iÏ;@;"property;"property:@whitespace_after0:@beforeo;;iÏ;0;:originally_text;@;o:Sass::Script::String	;iÏ;@:
@type:identifier:@value"-;F;0:@whitespace_before0;0;F;@;o;
	;iÏ;@;"prefix;"prefix;0;0;i;@:@children[ [o:Sass::Tree::VariableNode;iÈ:
@expro;
;iÈ;{ ;@;[ ;"comma-list;@:@guarded0:@children[ ;"new-listo:Sass::Tree::EachNode;iÉ;@:@has_childrenT:	@var"v:
@listo;	;iÉ;@;"property;"property;[o;;iÊ;o;
;iÊ;{ ;@;[o;	;iÊ;@;"new_list;"new-listo;
;iÊ;{ ;@;[o;	;iÊ;@;"prefix;"prefixo;	;iÊ;@;"v;"v;"prefixed-for-transition;"append;@;0;[ ;"new-listo:Sass::Tree::ReturnNode	;iÌ;o;	;iÌ;@;"new_list;"new-list;@;[ ;"prefixed-for-transitiono;;iÖ;@;0;i ;
[ ;["7/* Checks if the value given is a unit of time. */o;4;i×;@;	T;![[o;";@;#"
value;"
value0;
[u;$ù[o:Sass::Script::Operation
:
@lineiØ:@options{ :@operand2o:Sass::Script::String	;iØ;@:
@type:identifier:@value"number:@operator:eq:@operand1o:Sass::Script::Funcall
;iØ:@keywords{ ;@:
@args[o:Sass::Script::Variable	;iØ;@:@underscored_name"
value:
@name"
value;"type-ofu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@lineiÛ:
@expro:Sass::Script::Bool;iÛ:@options{ :@valueF;	@	:@children[ [o:Sass::Tree::ReturnNode	;iÙ:
@expro:!Sass::Script::UnaryOperation	;iÙ:@operando;	;iÙ;o;
;iÙ;{ ;@;[o:Sass::Script::List	;iÙ;@:@separator:
space;[o;		;iÙ;@;
;;"so;		;iÙ;@;
;;"mso;
;iÙ;{ ;@;[o;	;iÙ;@;"
value;"
value;"	unit;"
index;@;:not;@;;;@:@children[ ;"is-time